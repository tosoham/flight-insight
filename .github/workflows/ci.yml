name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: flight_db
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U admin -d flight_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install backend dependencies
        run: |
          cd backend_dev
          pnpm install

      - name: Run backend tests
        run: |
          cd backend_dev
          pnpm test
        env:
          DATABASE_URL: postgresql://admin:admin123@localhost:5432/flight_db

  ml-service-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: flight_db
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U admin -d flight_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install ML service dependencies
        run: |
          cd backend_dev/ml_service
          pip install -r requirements.txt

      - name: Run Alembic migrations
        run: |
          cd backend_dev/ml_service
          alembic upgrade head
        env:
          DATABASE_URL: postgresql://admin:admin123@localhost:5432/flight_db

      - name: Run ML service tests
        run: |
          cd backend_dev/ml_service
          python -m pytest --maxfail=1 --disable-warnings -q
        env:
          DATABASE_URL: postgresql://admin:admin123@localhost:5432/flight_db

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install and build frontend
        run: |
          cd frontend
          pnpm install
          pnpm run build

      - name: Run frontend tests
        run: |
          cd frontend
          pnpm test
        continue-on-error: true

  notebooks-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install notebook dependencies
        run: |
          cd notebooks
          pip install -r requirements.txt

      - name: Validate notebooks syntax
        run: |
          cd notebooks
          python -m py_compile *.py
        continue-on-error: true

  docker-builds:
    runs-on: ubuntu-latest
    needs: [backend-tests, ml-service-tests, frontend-build]
    steps:
      - uses: actions/checkout@v4

      - name: Test docker-compose build
        run: |
          docker-compose -f docker-compose.yaml build --no-cache
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
